/*! lhq 2016-09-20 */
class sha1m {

    static getttt(){
        let now = Date.now();
        let appKey = this.hex_sha1("A6970328512280UZ" + "A411EB7A-E27D-E60F-EB23-F893EF978E06UZ" + now) + "." + now
        return {
            "X-APICloud-AppId":"A6970328512280",
            "X-APICloud-AppKey":appKey,
            "Content-Type":'application/json'
        }
    }
    static  hex_sha1(a) {
        return this.binb2hex(this.core_sha1(this.AlignSHA1(a)))
    }

    static   core_sha1(a) {
        for (var b = a, c = Array(80), d = 1732584193, e = -271733879, f = -1732584194, g = 271733878, h = -1009589776, i = 0; i < b.length; i += 16) {
            for (var j = d, k = e, l = f, m = g, n = h, o = 0; o < 80; o++) {
                o < 16 ? c[o] = b[i + o] : c[o] = this.rol(c[o - 3] ^ c[o - 8] ^ c[o - 14] ^ c[o - 16], 1);
                var p = this.safe_add(this.safe_add(this.rol(d, 5), this.sha1_ft(o, e, f, g)), this.safe_add(this.safe_add(h, c[o]), this.sha1_kt(o)));
                h = g, g = f, f = this.rol(e, 30), e = d, d = p
            }
            d = this.safe_add(d, j), e = this.safe_add(e, k), f = this.safe_add(f, l), g = this.safe_add(g, m), h = this.safe_add(h, n)
        }
        return new Array(d, e, f, g, h)
    }

    static   sha1_ft(a, b, c, d) {
        return a < 20 ? b & c | ~b & d : a < 40 ? b ^ c ^ d : a < 60 ? b & c | b & d | c & d : b ^ c ^ d
    }

    static  sha1_kt(a) {
        return a < 20 ? 1518500249 : a < 40 ? 1859775393 : a < 60 ? -1894007588 : -899497514
    }

    static   safe_add(a, b) {
        var c = (65535 & a) + (65535 & b), d = (a >> 16) + (b >> 16) + (c >> 16);
        return d << 16 | 65535 & c
    }

    static  rol(a, b) {
        return a << b | a >>> 32 - b
    }

    static   AlignSHA1(a) {
        for (var b = (a.length + 8 >> 6) + 1, c = new Array(16 * b), d = 0; d < 16 * b; d++) c[d] = 0;
        for (d = 0; d < a.length; d++) c[d >> 2] |= a.charCodeAt(d) << 24 - 8 * (3 & d);
        return c[d >> 2] |= 128 << 24 - 8 * (3 & d), c[16 * b - 1] = 8 * a.length, c
    }

    static   binb2hex(a) {
        for (var b = 0 ? "0123456789ABCDEF" : "0123456789abcdef", c = "", d = 0; d < 4 * a.length; d++) c += b.charAt(a[d >> 2] >> 8 * (3 - d % 4) + 4 & 15) + b.charAt(a[d >> 2] >> 8 * (3 - d % 4) & 15);
        return c
    }

    static   calcDigest() {
        var a = hex_sha1(document.SHAForm.SourceMessage.value);
        document.SHAForm.MessageDigest.value = a
    }

    // static  var hexcase = 0,chrsz = 8;
}

export default sha1m;